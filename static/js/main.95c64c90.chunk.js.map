{"version":3,"sources":["img/profile-sq.jpg","img/educa-card.jpg","components/Navigation.js","pages/Home.js","pages/Projects.js","pages/Profile.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","Navbar","variant","stick","className","Container","Brand","href","Collapse","Nav","Link","Home","src","icon","alt","Projects","CardDeck","Card","bg","style","height","borderRadius","Img","educaCard","Body","Title","color","Text","fontSize","Profile","Contact","App","id","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,qQCI9BC,G,MAAa,WACtB,OAEI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,MAAM,MAAMC,UAAY,UAC3C,kBAACC,EAAA,EAAD,KACA,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,KAAI,gDACvB,kBAACN,EAAA,EAAOO,SAAR,CAAiBJ,UAAU,uBACvB,kBAACK,EAAA,EAAD,KACI,kBAACA,EAAA,EAAIC,KAAL,CAAUH,KAAK,KAAf,QACA,kBAACE,EAAA,EAAIC,KAAL,CAAUH,KAAK,aAAf,YACA,kBAACE,EAAA,EAAIC,KAAL,CAAUH,KAAK,YAAf,YACA,kBAACE,EAAA,EAAIC,KAAL,CAAUH,KAAK,YAAf,iB,wCCXPI,EAAO,WAChB,OACI,yBAAKP,UAAU,QACX,yBAAKA,UAAU,gBACX,yBAAKQ,IAAKC,IAAMC,IAAI,GAAGV,UAAU,SACjC,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAd,WACA,uBAAGA,UAAU,aAAb,4F,yCCNPW,EAAW,WACpB,OACI,yBAAKX,UAAU,WACX,wCACA,yBAAKA,UAAU,iBACX,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,GAAK,OAAOC,MAAO,CAAEC,OAAQ,QAASC,aAAc,SACvD,kBAACJ,EAAA,EAAKK,IAAN,CAAUH,MAAO,CAAEC,OAAQ,QAASC,aAAc,QAAUT,IAAKW,MACjE,kBAACN,EAAA,EAAKO,KAAN,KACI,kBAACP,EAAA,EAAKQ,MAAN,CAAYN,MAAO,CAAEO,MAAO,UAAW,sCACvC,kBAACT,EAAA,EAAKU,KAAN,CAAWR,MAAO,CAAES,SAAU,SAA9B,iCACkC,6BADlC,kEAGA,kBAACX,EAAA,EAAKP,KAAN,CAAWH,KAAK,oCAAoCY,MAAO,CAAEO,MAAO,UAApE,gBAIR,kBAACT,EAAA,EAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,OAAQ,QAASC,aAAc,SACpD,kBAACJ,EAAA,EAAKK,IAAN,CAAUH,MAAO,CAAEC,OAAQ,QAASC,aAAc,QAAUnB,QAAQ,MAAMU,IAAI,KAC9E,kBAACK,EAAA,EAAKO,KAAN,KACI,kBAACP,EAAA,EAAKQ,MAAN,CAAYN,MAAO,CAAEO,MAAO,UAA5B,cACA,kBAACT,EAAA,EAAKU,KAAN,CAAWR,MAAO,CAAES,SAAU,SAA9B,qGASZ,kBAACZ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,OAAQ,QAASC,aAAc,SACpD,kBAACJ,EAAA,EAAKK,IAAN,CAAUH,MAAO,CAAEC,OAAQ,QAASC,aAAc,QAAUnB,QAAQ,MAAMU,IAAI,KAC9E,kBAACK,EAAA,EAAKO,KAAN,KACI,kBAACP,EAAA,EAAKQ,MAAN,CAAYN,MAAO,CAAEO,MAAO,UAA5B,cACA,kBAACT,EAAA,EAAKU,KAAN,CAAWR,MAAO,CAAES,SAAU,SAA9B,oGAOR,kBAACX,EAAA,EAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,OAAQ,QAASC,aAAc,SACpD,kBAACJ,EAAA,EAAKK,IAAN,CAAUH,MAAO,CAAEC,OAAQ,QAASC,aAAc,QAAUnB,QAAQ,MAAMU,IAAI,KAC9E,kBAACK,EAAA,EAAKO,KAAN,KACI,kBAACP,EAAA,EAAKQ,MAAN,CAAYN,MAAO,CAAEO,MAAO,UAA5B,cACA,kBAACT,EAAA,EAAKU,KAAN,CAAWR,MAAO,CAAES,SAAU,SAA9B,oGAOR,kBAACX,EAAA,EAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,OAAQ,QAASC,aAAc,SACpD,kBAACJ,EAAA,EAAKK,IAAN,CAAUH,MAAO,CAAEC,OAAQ,QAASC,aAAc,QAAUnB,QAAQ,MAAMU,IAAI,KAC9E,kBAACK,EAAA,EAAKO,KAAN,KACI,kBAACP,EAAA,EAAKQ,MAAN,CAAYN,MAAQ,CAAEO,MAAO,UAA7B,cACA,kBAACT,EAAA,EAAKU,KAAN,CAAWR,MAAO,CAAES,SAAU,SAA9B,wGC5DfC,EAAU,WACnB,OACI,6BAAK,oCCFAC,EAAU,WACnB,OACI,6BAAK,yCC0BEC,MAlBf,WACE,OACE,yBAAK3B,UAAU,OACb,yBAAK4B,GAAG,WACR,yBAAKA,GAAG,WACR,kBAAC,IAAD,CAAeC,SAAW,sBACxB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzB,IACjC,kBAAC,IAAD,CAAOwB,KAAK,YAAYC,UAAWrB,IACnC,kBAAC,IAAD,CAAOoB,KAAK,WAAWC,UAAWP,IAClC,kBAAC,IAAD,CAAOM,KAAK,WAAWC,UAAWN,QCXxBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.95c64c90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-sq.2a50a8bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/educa-card.fdd4ba1e.jpg\";","import React from 'react'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\nimport './Navigation.css'\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n       \r\n        <Navbar variant=\"dark\" stick=\"top\" className = \"navbar\" >\r\n            <Container >\r\n            <Navbar.Brand href=\"/\"><h3>Fangy's Website</h3></Navbar.Brand>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav >\r\n                    <Nav.Link href=\"/\">Home</Nav.Link>\r\n                    <Nav.Link href=\"/projects\">Projects</Nav.Link>\r\n                    <Nav.Link href=\"/profile\">About Me</Nav.Link>\r\n                    <Nav.Link href=\"/contact\">Contact</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\nimport './Home.css'\r\nimport icon from '../img/profile-sq.jpg'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home-context\" >\r\n                <img src={icon} alt=\"\" className=\"icon\"/>\r\n                <div className=\"home-text\">\r\n                    <h1 className=\"header-home\" >Welcome</h1>\r\n                    <p className=\"text-home\"> This is my personal website. for learning about\r\n                    React Js Html and Css. Let's see !!\r\n                    </p>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Card, CardDeck } from 'react-bootstrap'\r\nimport './Projects.css'\r\nimport educaCard from '../img/educa-card.jpg'\r\n\r\nexport const Projects = () => {\r\n    return (\r\n        <div className=\"project\">\r\n            <h1>Projects</h1>\r\n            <div className=\"projects-list\">\r\n                <CardDeck>\r\n                    <Card  bg = \"dark\" style={{ height: '350px', borderRadius: '20px' }} >\r\n                        <Card.Img style={{ height: '200px', borderRadius: '20px' }} src={educaCard} />\r\n                        <Card.Body>\r\n                            <Card.Title style={{ color: \"white\" }}><h4>Educa</h4></Card.Title>\r\n                            <Card.Text style={{ fontSize: '15px' }}>\r\n                                Web application for Education <br></br> - Software Development Process Project with my team at KMITL.\r\n                            </Card.Text>\r\n                            <Card.Link href=\"https://github.com/Educa-software\" style={{ color: \"white\" }}>See Github</Card.Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <Card bg=\"dark\" style={{ height: '350px', borderRadius: '20px' }}>\r\n                        <Card.Img style={{ height: '200px', borderRadius: '20px' }} variant=\"top\" src=\"\" />\r\n                        <Card.Body>\r\n                            <Card.Title style={{ color: \"white\" }}   >Card Title</Card.Title>\r\n                            <Card.Text style={{ fontSize: '15px' }}>\r\n                                Some quick example text to build on the card title and make up the bulk of\r\n                                the card's content.\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n\r\n                </CardDeck>\r\n                <CardDeck>\r\n                    <Card bg=\"dark\" style={{ height: '350px', borderRadius: '20px' }}>\r\n                        <Card.Img style={{ height: '200px', borderRadius: '20px' }} variant=\"top\" src=\"\" />\r\n                        <Card.Body>\r\n                            <Card.Title style={{ color: \"white\" }}   >Card Title</Card.Title>\r\n                            <Card.Text style={{ fontSize: '15px' }}>\r\n                                Some quick example text to build on the card title and make up the bulk of\r\n                                the card's content.\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <Card bg=\"dark\" style={{ height: '350px', borderRadius: '20px' }}>\r\n                        <Card.Img style={{ height: '200px', borderRadius: '20px' }} variant=\"top\" src=\"\" />\r\n                        <Card.Body>\r\n                            <Card.Title style={{ color: \"white\" }}   >Card Title</Card.Title>\r\n                            <Card.Text style={{ fontSize: '15px' }}>\r\n                                Some quick example text to build on the card title and make up the bulk of\r\n                                the card's content.\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <Card bg=\"dark\" style={{ height: '350px', borderRadius: '20px' }}>\r\n                        <Card.Img style={{ height: '200px', borderRadius: '20px' }} variant=\"top\" src=\"\" />\r\n                        <Card.Body>\r\n                            <Card.Title style={ { color: \"white\" }}   >Card Title</Card.Title>\r\n                            <Card.Text style={{ fontSize: '15px' }}>\r\n                                Some quick example text to build on the card title and make up the bulk of\r\n                                the card's content.\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                </CardDeck>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Profile = () =>{\r\n    return(\r\n        <div><h1>me</h1></div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Contact = () =>{\r\n    return(\r\n        <div><h1>Contact</h1></div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navigation } from './components/Navigation';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Home } from './pages/Home'\nimport { Projects } from './pages/Projects'\nimport { Profile } from './pages/Profile'\nimport { Contact } from './pages/Contact'\n\n//import { Button } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id='stars2'></div>\n      <div id='stars3'></div>\n      <BrowserRouter basename = '/fangy43.github.io'>\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/contact\" component={Contact} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}