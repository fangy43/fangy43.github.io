{"version":3,"sources":["img/welcome.svg","img/resume-v2.png","img/educa-card.jpg","img/profile-sq.jpg","components/Navigation/Navigation.js","pages/Home/Home.js","components/ProjectCard/ProjectCard.js","pages/Projects/Projects.js","pages/Profile/Profile.js","pages/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","Navbar","variant","stick","className","Container","Brand","href","Collapse","Nav","Link","Home","src","icon","alt","ProjectCard","props","Card","bg","style","height","width","borderRadius","margin","Ref","Img","ImgURL","Body","Title","color","Topic","Text","fontSize","textAlign","Des","GithubRef","Projects","map","items","Profile","useState","portfolio","Contact","App","id","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e9983234.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/welcome.acf1332f.svg\";","module.exports = __webpack_public_path__ + \"static/media/resume-v2.5f89719b.png\";","module.exports = __webpack_public_path__ + \"static/media/educa-card.fdd4ba1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile-sq.35b29eaf.jpg\";","import React from 'react'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\nimport './Navigation.css'\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n       \r\n        <Navbar variant=\"dark\" stick=\"top\" className = \"navbar\" >\r\n            <Container >\r\n            <Navbar.Brand href=\"/\"><h3>Fangy's Website</h3></Navbar.Brand>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav >\r\n                    <Nav.Link href=\"/\">Home</Nav.Link>\r\n                    <Nav.Link href=\"/projects\">Projects</Nav.Link>\r\n                    <Nav.Link href=\"/profile\">About Me</Nav.Link>\r\n                    <Nav.Link href=\"/contact\">Contact</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\nimport './Home.css'\r\nimport icon from '../../img/welcome.svg'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home-context\" >\r\n                <img src={icon} alt=\"\" className=\"icon\"/>\r\n                <div className=\"home-text\">\r\n                    <br/>\r\n                    <p className=\"text-home\"> Hi! My name is Fang. This is my personal website. Let's see !!\r\n                    </p>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Card, CardDeck } from 'react-bootstrap'\r\nimport React from 'react'\r\nexport const ProjectCard = (props) => {\r\n\r\n    return (\r\n        <Card bg=\"dark\" style={{ height: '380px', width: '500px', borderRadius: '20px' ,margin: \"20px\"}} >\r\n            <Card.Link href={props.Ref}>\r\n                <Card.Img style={{ height: '200px', borderRadius: '25px' ,}} src={props.ImgURL} />\r\n            </Card.Link>\r\n            <Card.Body>\r\n                <Card.Title style={{ color: \"white\" }}><h4>{props.Topic}</h4></Card.Title>\r\n                <Card.Text style={{ fontSize: '20px', textAlign: 'left' }}>\r\n                    {props.Des}\r\n                </Card.Text>\r\n                <Card.Link href={props.GithubRef} style={{ color: \"white\" }}>See Github</Card.Link>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { Card, CardDeck } from 'react-bootstrap'\r\nimport './Projects.css'\r\nimport educaCard from '../../img/educa-card.jpg'\r\nimport { ProjectCard } from '../../components/ProjectCard/ProjectCard'\r\n\r\nexport const Projects = () => {\r\n\r\n    const cards = [\r\n        {\r\n            ImgURL:'https://github.com/fangy43/fangy43.github.io/blob/dev/src/img/educa-card.jpg?raw=true',\r\n            Topic:\"Educa\",\r\n            Des:\" Web application for Education  - Software Development Process Project with my team at KMITL.\",\r\n            GithubRef:\"https://github.com/educa-kmitl\",\r\n            Ref:\"https://educa.now.sh\",\r\n        }\r\n        \r\n    ]\r\n\r\n\r\n    return (\r\n        <div className=\"project\">\r\n            <h1>Projects</h1>\r\n            <div className=\"projects-list\">\r\n                {cards.map((items) => {\r\n                    return(\r\n                        <ProjectCard\r\n                            ImgURL={items.ImgURL}\r\n                            Topic={items.Topic}\r\n                            Des={items.Des}\r\n                            GithubRef={items.GithubRef}\r\n                            Ref={items.Ref}\r\n                         />\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './Profile.css'\r\nimport icon from '../../img/profile-sq.jpg'\r\nimport { useState } from 'react'\r\n\r\nimport portfolio from '../../img/resume-v2.png'\r\n\r\nexport const Profile = () => {\r\n    \r\n    const [name,setName] = useState([]) \r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <img className = \"profile-img\" src = {portfolio} width = \"1160px\"  />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Contact = () =>{\r\n    return(\r\n        <div><h1>Contact...</h1></div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Home } from './pages/Home/Home'\nimport { Projects } from './pages/Projects/Projects'\nimport { Profile } from './pages/Profile/Profile'\nimport { Contact } from './pages/Contact/Contact'\n\n//import { Button } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id='stars2'></div>\n      <div id='stars3'></div>\n      <BrowserRouter basename = '/fangy43.github.io'>\n        <Navigation />\n        <Switch>\n        <Route exact path=\"/\" component={Home} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/contact\" component={Contact} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}